digraph "doctest::detail::MessageBuilder"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{doctest::detail::Message\lBuilder\n|+ logged\l|+ MessageBuilder()\l+ MessageBuilder()\l+ MessageBuilder()\l+ operator=()\l+ operator=()\l+ ~MessageBuilder()\l+ operator,()\l+ operator\<\<()\l+ operator*()\l+ log()\l+ react()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{doctest::MessageData\n|+ m_file\l+ m_line\l+ m_severity\l|}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structdoctest_1_1_message_data.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",style="solid",label=" +m_string" ,arrowhead="odiamond"];
  Node3 [label="{doctest::String\n|+ buf\l+ npos\l|+ String()\l+ ~String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ operator=()\l+ operator+=()\l+ String()\l+ operator=()\l+ operator[]()\l+ operator[]()\l+ c_str()\l+ c_str()\l+ size()\l+ capacity()\l+ substr()\l+ substr()\l+ find()\l+ rfind()\l+ compare()\l+ compare()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classdoctest_1_1_string.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",style="solid",label=" +data" ,arrowhead="odiamond"];
  Node4 [label="{doctest::String::view\n|+ ptr\l+ size\l+ capacity\l|}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node1 [color="grey25",style="solid",label=" +m_stream" ,arrowhead="odiamond"];
  Node5 [label="{std::ostream\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{std::basic_ostream\l\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [label="{std::basic_ios\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node8 [label="{std::ios_base\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
